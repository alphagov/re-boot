---
# Concourse pipeline
apiVersion: v1
kind: ConfigMap
metadata:
  name: concourse-pipeline-config
  labels:
    app: concourse-pipeline-updater
    release: concourse
data:
  pipeline.yaml: |-
    resources:
      - name: re-boot
        type: git
        source:
          uri: https://github.com/alphagov/re-boot.git
          branch: master
    jobs:
      - name: apply
        serial: true
        plan:
          - get: re-boot
            trigger: true
          - task: self-update
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: lachlanevenson/k8s-kubectl
                  tag: v1.11.2-bash
              inputs:
                - name: re-boot
              params:
                KUBERNETES_PORT: tcp://100.64.0.1:443
                KUBERNETES_PORT_443_TCP_PORT: 443
                KUBERNETES_SERVICE_PORT: 443
                KUBERNETES_SERVICE_HOST: 100.64.0.1
                KUBERNETES_PORT_443_TCP_PROTO: tcp
                KUBERNETES_SERVICE_PORT_HTTPS: 443
                KUBERNETES_PORT_443_TCP_ADDR: 100.64.0.1
                KUBERNETES_PORT_443_TCP: tcp://100.64.0.1:443

                KUBE_CA: ((KUBE_CA))
                KUBE_NAMESPACE: ((KUBE_NAMESPACE))
                KUBE_TOKEN: ((KUBE_TOKEN))
                KUBE_API_ADDRESS: 100.64.0.1
                KUBE_API_PORT: 443
              run:
                path: /bin/bash
                args:
                - -e
                - -c
                - |
                  echo "Reapplying concourse"
                  echo "${KUBE_CA}" > /tmp/ca.crt

                  kubectl apply \
                    --server="https://${KUBE_API_ADDRESS}:${KUBE_API_PORT}" \
                    --token="${KUBE_TOKEN}" \
                    --certificate-authority=/tmp/ca.crt \
                    -f re-boot/kops/mgmt \
                    -R
            - task: argo-deploy
              config:
                platform: linux
                image_resource:
                  type: docker-image
                  source:
                    repository: docker.io/argoproj/argocli
                    tag: v2.1.1
                inputs:
                  - name: re-boot
                run:
                  path: /bin/bash
                  args:
                  - -e
                  - -c
                  - |
                    echo "Install Argo"
                    argo install
                    argo submit re-boot/kops/argo/001-argo-workflow.yaml
                    argo submit re-boot/kops/argo/002-argo-deployment.yaml
